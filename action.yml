name: 'MS Teams Deploy Card'
description: 'Simple deploy card for microsoft teams via webhook connector'
inputs:
  webhook_url:
    description: MS Teams webhook connector url
    required: true
  environment:
    description: deployment stage e.g. production
    required: false
    default: ''
  project_url:
    description: Browser url to the deployed version
    required: false
    default: ''
  tenant:
    description: name of the tenant
    required: false
    default: ''
runs:
  using: "composite"
  steps:
    - shell: php {0}
      run: |
        <?php
        $color = "${{ job.status }}" === 'success' ? '00ff00' : 'ff0000';
        $timestamp = (new DateTime("${{ github.event.head_commit.timestamp }}"))->format('d.m.Y H:i:s');
        $branch = str_replace('refs/heads/', '',"${{ github.ref }}");

        $facts = [
            [
                "name" => "Status",
                "value" => "${{ job.status }}",
            ],
            [
                "name" => "Commit",
                "value" => "[${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})",
                "markdown" => true,
            ],
            [
                "name" => "Commit Message",
                "value" => "${{ github.event.head_commit.message }}",
            ],
            [
                "name" => "Branch",
                "value" => "[".$branch."](https://github.com/${{ github.repository }}/tree/".$branch.")",
            ],
        ];
        $potentialActions = [];

        $environment = trim("${{ inputs.environment }}");
        if ($environment) {
            $facts[] = json_encode(['name' => 'Environment', 'value' => $environment]);
        }

        $tenant = trim("${{ inputs.tenant }}");
        if ($tenant) {
            $facts[] = json_encode(['name' => 'Tenant', 'value' => $tenant]);
        }

        $project_url = trim("${{ inputs.project_url }}");
        if ($project_url) {
            $facts[] = json_encode(['name' => 'Project Url', 'value' => $project_url]);
        }

        if($project_url) {
            $potentialActions[] = [
                "@type" => "OpenUri",
                "name" => "Open in Browser",
                "targets" => [
                    [
                        "os" => "default",
                        "uri" => $project_url
                    ]
                ]
            ];
        }

        $payload = json_encode([
            "@type" => "MessageCard",
            "@context" => "http://schema.org/extensions",
            "themeColor" => $color,
            "summary" => "deployment-bot",
            "sections" => [
                [
                    "activityTitle" => "Deployment for [${{ github.repository }}](https://github.com/${{ github.repository }})",
                    "activitySubtitle" => "by [@${{ github.event.sender.login }}](https://github.com/${{ github.event.sender.login }}) on ".$timestamp,
                    "activityImage" => "${{ github.event.sender.avatar_url }}",
                    "facts" => $facts,
                    "markdown" =>  true,
                ],
            ],
            "potentialAction" => $potentialActions,
        ]);

        $ch = curl_init("${{ inputs.webhook_url }}");
        curl_setopt($ch, CURLOPT_POSTFIELDS, $payload);
        curl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type:application/json'));
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
        echo curl_exec($ch);
        curl_close($ch);
